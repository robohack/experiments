#!/bin/sh

#	pure:
#	(1,1,0)		(1,1,0)
#	(1,2,0)		(1,2,0)
#			(2,1,0)
#	(1,1,1)		(2,2,0)
#	(1,2,1)
#			(1,1,2)
#	(1,1,2)		(1,2,2)
#	(1,2,2)		(2,1,2)
#			(2,2,2)
#	(2,1,0)
#	(2,2,0)		(1,1,1)
#			(1,2,1)
#	(2,1,1)		(2,1,1)
#	(2,2,1)		(2,2,1)
#
#	(2,1,2)
#	(2,2,2)

# pure
sort -n -k 1,1 -n -k 2,2 -n -k 3,3 <<__EOF__
1 1 0
1 2 0
1 1 1
1 2 1
1 1 2
1 2 2
2 1 0
2 2 0
2 1 1
2 2 1
2 1 2
2 2 2
__EOF__

sort -t . -n -k 1,1 -n -k 2,2 -n -k 3,3 -n -k 4,4 <<__EOF__
1.1.0.2
1.1.1.2
1.1.0.0
1.2.0.1
1.1.0.2
1.1.2.1
2.1.0.0
1.1.1.0
1.2.0.2
2.1.2.1
1.2.1.2
1.1.1.1
2.1.0.1
1.1.2.0
2.1.2.0
1.2.2.2
1.2.0.0
2.1.0.1
2.1.0.0
1.2.1.1
2.2.0.2
2.2.0.1
1.2.2.1
2.2.0.0
2.1.1.2
2.1.1.0
2.1.1.1
2.2.2.2
1.1.2.2
2.2.1.0
2.2.1.1
2.1.0.2
2.2.1.2
2.1.2.2
2.1.0.2
1.2.1.2
2.2.2.1
1.2.2.0
2.2.2.0
__EOF__


awk -F. '{print ($1 * 2^24) + ($2 * 2^16) + ($3 * 2^8) + $4}' <<__EOF__ | sort -n | \
    awk '{printf("%d.%d.%d.%d\n", $1 / 2^24 % 2^8, ($1 / 2^16) % 2^8, ($1 / 2^8) % 2^8, $1 % 2^8)}'
1.1.0.2
1.1.1.2
1.1.0.0
1.2.0.1
1.1.0.2
1.1.2.1
2.1.0.0
1.1.1.0
1.2.0.2
2.1.2.1
1.2.1.2
1.1.1.1
2.1.0.1
1.1.2.0
2.1.2.0
1.2.2.2
1.2.0.0
2.1.0.1
2.1.0.0
1.2.1.1
2.2.0.2
2.2.0.1
1.2.2.1
2.2.0.0
2.1.1.2
2.1.1.0
2.1.1.1
2.2.2.2
1.1.2.2
2.2.1.0
2.2.1.1
2.1.0.2
2.2.1.2
2.1.2.2
2.1.0.2
1.2.1.2
2.2.2.1
1.2.2.0
2.2.2.0
__EOF__
